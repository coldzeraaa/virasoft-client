"""
Requires that exactly one field must be supplied and that field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

"""
Exposes a URL that specifies the behavior of this scalar.
"""
directive @specifiedBy(
  """
  The URL that specifies the behavior of this scalar.
  """
  url: String!
) on SCALAR

"""
Autogenerated input type of addImageVariant
"""
input addImageVariantInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  variantId: ID
  images: [Upload!]!
}

type Address implements BaseModelInterface {
  address1: String!
  address2: String!
  addressAlias: String
  alternativeEmail: String
  alternativeMobile: String
  company: String
  createdAt: ISO8601DateTime!
  email: String
  firstName: String
  id: ID!
  isCompany: Boolean
  lastName: String
  latitude: String
  longitude: String
  mobile: String
  phone: String
  preferences: JSON!
  updatedAt: ISO8601DateTime!
  zipcode: String
}

input AddressFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
  firstName: StringFilter
  lastName: StringFilter
  mobile: StringFilter
  email: StringFilter
  isCompany: BoolFilter
  address1: StringFilter
  address2: StringFilter
}

input AddressInput {
  addressAlias: String
  firstName: String
  lastName: String
  phone: String
  mobile: String
  email: String
  isCompany: Boolean
  company: String
  alternativeMobile: String
  alternativeEmail: String
  zipcode: String
  latitude: String
  longitude: String
  address1: String
  address2: String
  preferences: JSON
}

"""
Autogenerated input type of addToCart
"""
input addToCartInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  number: String
  token: String
  items: [CartItemInput!]!
}

type Application implements BaseModelInterface {
  confidential: Boolean!
  createdAt: ISO8601DateTime!
  id: ID!
  name: String!
  redirectUri: String!
  scopes: String!
  secret: String!
  uid: String!
  updatedAt: ISO8601DateTime!
  website: Website
  websiteId: ID
}

"""
The connection type for Application.
"""
type ApplicationConnection {
  """
  A list of edges.
  """
  edges: [ApplicationEdge!]!

  """
  A list of nodes.
  """
  nodes: [Application!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type ApplicationEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Application!
}

input ApplicationFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
}

type AssetRole implements BaseModelInterface {
  assetId: ID!
  assetType: String!
  createdAt: ISO8601DateTime!
  id: ID!
  roles: [String!]!
  updatedAt: ISO8601DateTime!
  user: User!
  userId: ID!
  vendor: Vendor!
  vendorId: ID!
  vendorUser: VendorUser!
  vendorUserId: ID!
}

"""
The connection type for AssetRole.
"""
type AssetRoleConnection {
  """
  A list of edges.
  """
  edges: [AssetRoleEdge!]!

  """
  A list of nodes.
  """
  nodes: [AssetRole!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type AssetRoleEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AssetRole!
}

input AssetRoleFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
  vendorId: IDFilter
}

type AuthCheckLogin {
  exists: Boolean!
  mobileConfirmationSentAt: String
}

"""
Autogenerated input type of authCheckLogin
"""
input authCheckLoginInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Login email or mobile
  """
  login: String!
  sendToken: Boolean
}

"""
Autogenerated input type of authRegister
"""
input authRegisterInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  login: String!
  token: String!
  firstName: String!
  lastName: String!
  password: String!
}

interface BaseModelInterface {
  createdAt: ISO8601DateTime!
  id: ID!
  updatedAt: ISO8601DateTime!
}

input BoolFilter {
  """
  equals to
  """
  eq: Boolean

  """
  not equals to
  """
  notEq: Boolean

  """
  is null ?
  """
  notNull: Boolean

  """
  is null ?
  """
  null: Boolean
}

type Brand implements BaseModelInterface {
  code: String!
  createdAt: ISO8601DateTime!
  description: String
  id: ID!
  name: String!
  updatedAt: ISO8601DateTime!
  verified: Boolean!
}

"""
The connection type for Brand.
"""
type BrandConnection {
  """
  A list of edges.
  """
  edges: [BrandEdge!]!

  """
  A list of nodes.
  """
  nodes: [Brand!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type BrandEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Brand!
}

input BrandFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
}

"""
Autogenerated input type of buildAssetRole
"""
input buildAssetRoleInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Asset id of vendor, or website
  """
  assetId: ID!

  """
  Asset type. Supp::Vendor, Supp::Website, Supp::Merchant
  """
  assetType: String!

  """
  First name
  """
  vendorId: ID!

  """
  Employee id. supp_vendor_users
  """
  vendorUserId: ID!

  """
  roles
  """
  roles: [String!]!
}

input CartItemInput {
  """
  Quantity
  """
  quantity: Int

  """
  SKU
  """
  sku: String

  """
  Variant ID
  """
  variantId: ID

  """
  Options
  """
  options: JSON
}

"""
Autogenerated input type of checkOrder
"""
input checkOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  invoiceId: String!
  action: PaymentMethodEnum
}

"""
Autogenerated input type of checkOtp
"""
input checkOtpInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  mobile
  """
  login: String!

  """
  confirmation token
  """
  token: String!
  unconfirmedMobile: Boolean
}

"""
Autogenerated input type of createApplication
"""
input createApplicationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  confidential: Boolean!
  name: String!
  redirectUri: String!
  scopes: String!
  secret: String!
  uid: String!
  websiteId: String!
}

"""
Autogenerated input type of createAssetRole
"""
input createAssetRoleInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Asset id of vendor, or website
  """
  assetId: ID!

  """
  Asset type. Supp::Vendor, Supp::Website, Supp::Merchant
  """
  assetType: String!

  """
  First name
  """
  vendorId: ID!

  """
  Employee id. supp_vendor_users
  """
  vendorUserId: ID!

  """
  roles
  """
  roles: [String!]!
}

"""
Autogenerated input type of createBrand
"""
input createBrandInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  code: String!
  description: String
  verified: Boolean
}

"""
Autogenerated input type of createImage
"""
input createImageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Class ID
  """
  id: ID!

  """
  Supp::Menu or Supp::Page
  """
  type: String!

  """
  Image ID
  """
  images: [Upload!]!
}

"""
Autogenerated input type of createListing
"""
input createListingInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  websiteId: ID!
  productId: ID!
  published: Boolean
  approved: Boolean
  slug: String
}

"""
Autogenerated input type of createMenu
"""
input createMenuInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  websiteId: ID!
  title: String
  link: String
  preferences: JSON
  type: String
  icon: String
  parentId: ID
  childrenAttributes: [MenuChildrenInput!]
}

"""
Autogenerated input type of createMerchant
"""
input createMerchantInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  websiteId: ID!
  vendorId: ID!
}

"""
Autogenerated input type of createOptionType
"""
input createOptionTypeInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  presentation: String!
  position: Int
}

"""
Autogenerated input type of createOptionValue
"""
input createOptionValueInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  optionTypeId: ID!
  name: String!
  presentation: String!
  code: String
  position: Int
}

"""
Autogenerated input type of createPage
"""
input createPageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  websiteId: ID!
  title: String
  preferences: JSON
  metaData: JSON
  items: [JSON!]
  slug: String
}

"""
Autogenerated input type of createPaymentMethod
"""
input createPaymentMethodInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!

  """
  Supp::PaymentMethod::QPay::VirasoftPay
  """
  type: String!
  websiteId: ID!
  description: String
  active: Boolean
  testMode: Boolean
  preferences: JSON
}

"""
Autogenerated input type of createProduct
"""
input createProductInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  title: String!
  vendorId: ID!
  condition: String!
  slug: String!
  price: Float!
  sku: String!
  productCat: String
  brandId: ID
  data: JSON
  info: JSON
  description: String
  published: Boolean
  approved: Boolean
}

"""
Autogenerated input type of createUserAddress
"""
input createUserAddressInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  addressAttributes: AddressInput!
  userId: ID
}

"""
Autogenerated input type of createUser
"""
input createUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  firstName: String!
  mobile: String!
  gender: String
  lastName: String
  email: String
}

"""
Autogenerated input type of createVariant
"""
input createVariantInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  productId: ID!
  sku: String!
  price: Float!
  optionValues: [ID!]!
  barcode: String
  merchantSku: String
  description: String
  position: Int
  isMaster: Boolean
  weight: Float
  netWeight: Float
  width: Float
  height: Float
  depth: Float
  images: [Upload!]
}

"""
Autogenerated input type of createVendor
"""
input createVendorInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  code: String!
  registerNum: String
  phone: String
  email: String
  website: String
  address: String
}

"""
Autogenerated input type of createVendorUser
"""
input createVendorUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  vendorId: ID!
  userId: ID!
  role: VendorUserRole!
  firstName: String
  lastName: String
  email: String
  mobile: String
  status: Int
}

"""
Autogenerated input type of createWebsite
"""
input createWebsiteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  index: String!
  domain: String!
}

input DateFilter {
  """
  equals to
  """
  eq: String

  """
  Greater than
  """
  gt: String

  """
  Greater than or equals
  """
  gteq: String

  """
  Less than
  """
  lt: String

  """
  Less than or equals
  """
  lteq: String

  """
  not equals to
  """
  notEq: String

  """
  is null ?
  """
  notNull: Boolean

  """
  is null ?
  """
  null: Boolean
}

"""
Autogenerated input type of destroyApplication
"""
input destroyApplicationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of destroyAssetRole
"""
input destroyAssetRoleInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of destroyBrand
"""
input destroyBrandInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of destroyImage
"""
input destroyImageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Menu ID
  """
  id: ID!

  """
  Supp::Menu or Supp::Page
  """
  type: String!

  """
  Image ID
  """
  imageId: ID!
}

"""
Autogenerated input type of destroyListing
"""
input destroyListingInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of destroyMenu
"""
input destroyMenuInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of destroyMerchant
"""
input destroyMerchantInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of destroyOptionType
"""
input destroyOptionTypeInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of destroyOptionValue
"""
input destroyOptionValueInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of destroyPage
"""
input destroyPageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of destroyPaymentMethod
"""
input destroyPaymentMethodInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of destroyProduct
"""
input destroyProductInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of destroyUserAddress
"""
input destroyUserAddressInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of destroyVariant
"""
input destroyVariantInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of destroyVendor
"""
input destroyVendorInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of destroyVendorUser
"""
input destroyVendorUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of destroyWebsite
"""
input destroyWebsiteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of emptyItem
"""
input emptyItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  number: String
  token: String
}

type Event implements BaseModelInterface {
  createdAt: ISO8601DateTime!
  id: ID!
  params: JSON!
  recordId: ID!
  recordType: String!
  type: String!
  updatedAt: ISO8601DateTime!
}

input IDFilter {
  """
  equals to
  """
  eq: ID

  """
  in: Matches any values in giver array
  """
  in: [ID!]

  """
  not equals to
  """
  notEq: ID

  """
  in: Matches none of values in giver array
  """
  notIn: [ID!]

  """
  is null ?
  """
  blank: Boolean

  """
  Greater than
  """
  gt: Int

  """
  Greater than or equals
  """
  gteq: Int

  """
  Less than
  """
  lt: Int

  """
  Less than or equals
  """
  lteq: Int

  """
  Starts with
  """
  start: Int
}

union Image = Menu | Page

type ImageObject {
  fileName: String!
  id: ID!
  recordId: Int!
  recordType: String!
  url: String!
}

input IntFilter {
  """
  is blank ?
  """
  blank: Boolean

  """
  equals to
  """
  eq: Float

  """
  Greater than
  """
  gt: Float

  """
  Greater than or equals
  """
  gteq: Float

  """
  in: Matches none of values in giver array
  """
  in: [Float!]

  """
  Less than
  """
  lt: Float

  """
  Less than or equals
  """
  lteq: Float

  """
  not equals to
  """
  notEq: Float

  """
  in: Matches none of values in giver array
  """
  notIn: [Float!]

  """
  is null ?
  """
  null: Boolean
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Item implements BaseModelInterface {
  createdAt: ISO8601DateTime!
  id: ID!
  order: Order
  orderId: ID
  price: Float!
  quantity: Int!
  status: String!
  total: Float!
  updatedAt: ISO8601DateTime!
  variant: Variant!
  variantId: ID!
}

"""
Represents untyped JSON
"""
scalar JSON

type Listing implements BaseModelInterface {
  approved: Boolean!
  createdAt: ISO8601DateTime!
  id: ID!
  product: Product!
  productId: ID!
  published: Boolean!
  slug: String!
  updatedAt: ISO8601DateTime!
  website: Website!
  websiteId: ID!
}

"""
The connection type for Listing.
"""
type ListingConnection {
  """
  A list of edges.
  """
  edges: [ListingEdge!]!

  """
  A list of nodes.
  """
  nodes: [Listing!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type ListingEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Listing!
}

input ListingFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
  product: ProductFilter
  website: WebsiteFilter
  productId: IDFilter
  websiteId: IDFilter
  slug: StringFilter
  approved: BoolFilter
  published: BoolFilter
}

type Menu implements BaseModelInterface {
  children: [Menu!]
  createdAt: ISO8601DateTime!
  hasChildren: Boolean
  icon: String
  id: ID!
  imageObjects: [ImageObject!]!
  images: [String!]
  link: String!
  parent: Menu
  parentId: ID
  preferences: JSON
  title: String!
  type: String
  updatedAt: ISO8601DateTime!
  website: Website
}

input MenuChildrenInput {
  title: String
  link: String
  preferences: JSON
  type: String
  icon: String
}

"""
The connection type for Menu.
"""
type MenuConnection {
  """
  A list of edges.
  """
  edges: [MenuEdge!]!

  """
  A list of nodes.
  """
  nodes: [Menu!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type MenuEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Menu!
}

input MenuFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
  title: StringFilter
  type: StringFilter
  parentId: IDFilter
  websiteId: IDFilter
  website: WebsiteFilter
}

type Merchant implements BaseModelInterface {
  approvedAt: ISO8601DateTime
  cancelledAt: ISO8601DateTime
  createdAt: ISO8601DateTime!
  id: ID!
  listingsCount: Int
  requestedAt: ISO8601DateTime
  status: String!
  updatedAt: ISO8601DateTime!
  vendor: Vendor!
  website: Website!
}

"""
The connection type for Merchant.
"""
type MerchantConnection {
  """
  A list of edges.
  """
  edges: [MerchantEdge!]!

  """
  A list of nodes.
  """
  nodes: [Merchant!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type MerchantEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Merchant!
}

input MerchantFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
}

type Mutation {
  addImageVariant(
    """
    Parameters for addImageVariant
    """
    input: addImageVariantInput!
  ): Variant
  addToCart(
    """
    Parameters for addToCart
    """
    input: addToCartInput!
  ): Order

  """
  Checks if email or mobile registered
  """
  authCheckLogin(
    """
    Parameters for authCheckLogin
    """
    input: authCheckLoginInput!
  ): AuthCheckLogin
  authRegister(
    """
    Parameters for authRegister
    """
    input: authRegisterInput!
  ): User
  buildAssetRole(
    """
    Parameters for buildAssetRole
    """
    input: buildAssetRoleInput!
  ): AssetRole
  checkOrder(
    """
    Parameters for checkOrder
    """
    input: checkOrderInput!
  ): PaymentCheck
  checkOtp(
    """
    Parameters for checkOtp
    """
    input: checkOtpInput!
  ): Boolean
  createApplication(
    """
    Parameters for createApplication
    """
    input: createApplicationInput!
  ): Application
  createAssetRole(
    """
    Parameters for createAssetRole
    """
    input: createAssetRoleInput!
  ): AssetRole
  createBrand(
    """
    Parameters for createBrand
    """
    input: createBrandInput!
  ): Brand
  createImage(
    """
    Parameters for createImage
    """
    input: createImageInput!
  ): Image
  createListing(
    """
    Parameters for createListing
    """
    input: createListingInput!
  ): Listing
  createMenu(
    """
    Parameters for createMenu
    """
    input: createMenuInput!
  ): Menu
  createMerchant(
    """
    Parameters for createMerchant
    """
    input: createMerchantInput!
  ): Merchant
  createOptionType(
    """
    Parameters for createOptionType
    """
    input: createOptionTypeInput!
  ): OptionType
  createOptionValue(
    """
    Parameters for createOptionValue
    """
    input: createOptionValueInput!
  ): OptionValue
  createPage(
    """
    Parameters for createPage
    """
    input: createPageInput!
  ): Page
  createPaymentMethod(
    """
    Parameters for createPaymentMethod
    """
    input: createPaymentMethodInput!
  ): PaymentMethod
  createProduct(
    """
    Parameters for createProduct
    """
    input: createProductInput!
  ): Product
  createUser(
    """
    Parameters for createUser
    """
    input: createUserInput!
  ): User
  createUserAddress(
    """
    Parameters for createUserAddress
    """
    input: createUserAddressInput!
  ): UserAddress
  createVariant(
    """
    Parameters for createVariant
    """
    input: createVariantInput!
  ): Variant
  createVendor(
    """
    Parameters for createVendor
    """
    input: createVendorInput!
  ): Vendor
  createVendorUser(
    """
    Parameters for createVendorUser
    """
    input: createVendorUserInput!
  ): VendorUser
  createWebsite(
    """
    Parameters for createWebsite
    """
    input: createWebsiteInput!
  ): Website
  destroyApplication(
    """
    Parameters for destroyApplication
    """
    input: destroyApplicationInput!
  ): Application
  destroyAssetRole(
    """
    Parameters for destroyAssetRole
    """
    input: destroyAssetRoleInput!
  ): AssetRole
  destroyBrand(
    """
    Parameters for destroyBrand
    """
    input: destroyBrandInput!
  ): Brand
  destroyImage(
    """
    Parameters for destroyImage
    """
    input: destroyImageInput!
  ): Menu
  destroyListing(
    """
    Parameters for destroyListing
    """
    input: destroyListingInput!
  ): Listing
  destroyMenu(
    """
    Parameters for destroyMenu
    """
    input: destroyMenuInput!
  ): Menu
  destroyMerchant(
    """
    Parameters for destroyMerchant
    """
    input: destroyMerchantInput!
  ): Merchant
  destroyOptionType(
    """
    Parameters for destroyOptionType
    """
    input: destroyOptionTypeInput!
  ): OptionType
  destroyOptionValue(
    """
    Parameters for destroyOptionValue
    """
    input: destroyOptionValueInput!
  ): OptionValue
  destroyPage(
    """
    Parameters for destroyPage
    """
    input: destroyPageInput!
  ): Page
  destroyPaymentMethod(
    """
    Parameters for destroyPaymentMethod
    """
    input: destroyPaymentMethodInput!
  ): PaymentMethod
  destroyProduct(
    """
    Parameters for destroyProduct
    """
    input: destroyProductInput!
  ): Product
  destroyUserAddress(
    """
    Parameters for destroyUserAddress
    """
    input: destroyUserAddressInput!
  ): UserAddress
  destroyVariant(
    """
    Parameters for destroyVariant
    """
    input: destroyVariantInput!
  ): Variant
  destroyVendor(
    """
    Parameters for destroyVendor
    """
    input: destroyVendorInput!
  ): Vendor
  destroyVendorUser(
    """
    Parameters for destroyVendorUser
    """
    input: destroyVendorUserInput!
  ): VendorUser
  destroyWebsite(
    """
    Parameters for destroyWebsite
    """
    input: destroyWebsiteInput!
  ): Website
  emptyItem(
    """
    Parameters for emptyItem
    """
    input: emptyItemInput!
  ): Order
  paymentCheckout(
    """
    Parameters for paymentCheckout
    """
    input: paymentCheckoutInput!
  ): Order
  removeImageVariant(
    """
    Parameters for removeImageVariant
    """
    input: removeImageVariantInput!
  ): Variant
  removeItem(
    """
    Parameters for removeItem
    """
    input: removeItemInput!
  ): Order
  resetPassword(
    """
    Parameters for resetPassword
    """
    input: resetPasswordInput!
  ): User

  """
  Returns boolean whether sms is sent or not
  """
  sendOtp(
    """
    Parameters for sendOtp
    """
    input: sendOtpInput!
  ): User
  updateApplication(
    """
    Parameters for updateApplication
    """
    input: updateApplicationInput!
  ): Application
  updateAssetRole(
    """
    Parameters for updateAssetRole
    """
    input: updateAssetRoleInput!
  ): AssetRole
  updateBrand(
    """
    Parameters for updateBrand
    """
    input: updateBrandInput!
  ): Brand
  updateCheckoutAddress(
    """
    Parameters for updateCheckoutAddress
    """
    input: updateCheckoutAddressInput!
  ): Order
  updateItem(
    """
    Parameters for updateItem
    """
    input: updateItemInput!
  ): Order
  updateListing(
    """
    Parameters for updateListing
    """
    input: updateListingInput!
  ): Listing
  updateMenu(
    """
    Parameters for updateMenu
    """
    input: updateMenuInput!
  ): Menu
  updateMerchant(
    """
    Parameters for updateMerchant
    """
    input: updateMerchantInput!
  ): Merchant
  updateOptionType(
    """
    Parameters for updateOptionType
    """
    input: updateOptionTypeInput!
  ): OptionType
  updateOptionValue(
    """
    Parameters for updateOptionValue
    """
    input: updateOptionValueInput!
  ): OptionValue
  updatePage(
    """
    Parameters for updatePage
    """
    input: updatePageInput!
  ): Page
  updatePaymentMethod(
    """
    Parameters for updatePaymentMethod
    """
    input: updatePaymentMethodInput!
  ): PaymentMethod
  updateProduct(
    """
    Parameters for updateProduct
    """
    input: updateProductInput!
  ): Product
  updateUserAddress(
    """
    Parameters for updateUserAddress
    """
    input: updateUserAddressInput!
  ): UserAddress
  updateVariant(
    """
    Parameters for updateVariant
    """
    input: updateVariantInput!
  ): Variant
  updateVendor(
    """
    Parameters for updateVendor
    """
    input: updateVendorInput!
  ): Vendor
  updateVendorUser(
    """
    Parameters for updateVendorUser
    """
    input: updateVendorUserInput!
  ): VendorUser
  updateWebsite(
    """
    Parameters for updateWebsite
    """
    input: updateWebsiteInput!
  ): Website
}

type Notification implements BaseModelInterface {
  createdAt: ISO8601DateTime!
  event: Event!
  eventId: ID!
  id: ID!
  recipient: User!
  recipientId: ID!
  recipientType: String!
  type: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Notification.
"""
type NotificationConnection {
  """
  A list of edges.
  """
  edges: [NotificationEdge!]!

  """
  A list of nodes.
  """
  nodes: [Notification!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type NotificationEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Notification!
}

input NotificationFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
}

type OptionType implements BaseModelInterface {
  createdAt: ISO8601DateTime!
  id: ID!
  name: String!
  position: Int
  presentation: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for OptionType.
"""
type OptionTypeConnection {
  """
  A list of edges.
  """
  edges: [OptionTypeEdge!]!

  """
  A list of nodes.
  """
  nodes: [OptionType!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type OptionTypeEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: OptionType!
}

input OptionTypeFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
  name: StringFilter
  presentation: StringFilter
}

type OptionValue implements BaseModelInterface {
  code: String
  createdAt: ISO8601DateTime!
  id: ID!
  name: String!
  optionType: OptionType!
  optionTypeId: ID!
  position: Int
  presentation: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for OptionValue.
"""
type OptionValueConnection {
  """
  A list of edges.
  """
  edges: [OptionValueEdge!]!

  """
  A list of nodes.
  """
  nodes: [OptionValue!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type OptionValueEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: OptionValue!
}

input OptionValueFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
  name: StringFilter
  presentation: StringFilter
}

type Order implements BaseModelInterface {
  createdAt: ISO8601DateTime!
  currency: String!
  id: ID!
  itemCount: Int
  itemTotal: Int
  items: [Item!]!
  number: String!
  payments: [Payment!]!
  shipAddress: UserAddress
  token: String
  total: Int
  updatedAt: ISO8601DateTime!
  user: User
  userId: ID
  website: Website!
  websiteId: ID!
}

"""
The connection type for Order.
"""
type OrderConnection {
  """
  A list of edges.
  """
  edges: [OrderEdge!]!

  """
  A list of nodes.
  """
  nodes: [Order!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type OrderEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Order!
}

input OrderFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
}

type Page implements BaseModelInterface {
  createdAt: ISO8601DateTime!
  id: ID!
  items: [JSON!]
  metaData: JSON!
  preferences: JSON!
  slug: String!
  title: String!
  updatedAt: ISO8601DateTime!
  website: Website!
}

"""
The connection type for Page.
"""
type PageConnection {
  """
  A list of edges.
  """
  edges: [PageEdge!]!

  """
  A list of nodes.
  """
  nodes: [Page!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type PageEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Page!
}

input PageFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Payment implements BaseModelInterface {
  createdAt: ISO8601DateTime!
  id: ID!
  number: String!
  paymentMethod: PaymentMethod!
  source: JSON!
  updatedAt: ISO8601DateTime!
}

type PaymentCheck {
  count: Int!
  paidAmount: Int
  rows: [Row!]!
}

"""
Autogenerated input type of paymentCheckout
"""
input paymentCheckoutInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  action: PaymentMethodEnum
}

type PaymentMethod implements BaseModelInterface {
  active: Boolean!
  createdAt: ISO8601DateTime!
  description: String
  id: ID!
  name: String!
  preferences: JSON
  testMode: Boolean!
  type: String!
  updatedAt: ISO8601DateTime!
  website: Website!
}

"""
The connection type for PaymentMethod.
"""
type PaymentMethodConnection {
  """
  A list of edges.
  """
  edges: [PaymentMethodEdge!]!

  """
  A list of nodes.
  """
  nodes: [PaymentMethod!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type PaymentMethodEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: PaymentMethod!
}

"""
Payment Method
"""
enum PaymentMethodEnum {
  """
  VirasoftPay
  """
  virasoft_pay
}

input PaymentMethodFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
  name: StringFilter
}

"""
Гүйлгээ төлөв
"""
enum PaymentStatusEnum {
  """
  Гүйлгээ буцаагдсан
  """
  REFUNDED

  """
  Төлөгдсөн
  """
  PAID

  """
  Гүйлгээ амжилтгүй
  """
  FAILED

  """
  Гүйлгээ үүсгэгдсэн
  """
  NEW
}

type Product implements BaseModelInterface {
  approved: Boolean!
  approvedAt: ISO8601DateTime
  brand: Brand
  condition: String!
  createdAt: ISO8601DateTime!
  data: JSON
  description: String
  id: ID!
  images: [String!]!
  info: JSON
  master: Variant!
  name: String!
  productCat: String
  published: Boolean!
  slug: String!
  title: String!
  updatedAt: ISO8601DateTime!
  variants(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): VariantConnection!
  vendor: Vendor!
}

"""
The connection type for Product.
"""
type ProductConnection {
  """
  A list of edges.
  """
  edges: [ProductEdge!]!

  """
  A list of nodes.
  """
  nodes: [Product!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type ProductEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Product!
}

input ProductFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
  name: StringFilter
  title: StringFilter
  productCat: StringFilter
  condition: StringFilter
  slug: StringFilter
  description: StringFilter
  published: BoolFilter
  approved: BoolFilter
  vendorId: IDFilter
  brandId: IDFilter
}

type Query {
  application(id: ID!): Application
  applications(
    filter: ApplicationFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ApplicationConnection!
  assetRole(id: ID!): AssetRole
  assetRoles(
    filter: AssetRoleFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AssetRoleConnection!
  brand(id: ID!): Brand
  brands(
    filter: BrandFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): BrandConnection!
  currentOrder(number: String, token: String): Order
  listing(id: ID!): Listing
  listings(
    filter: ListingFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ListingConnection!
  me: User
  menu(id: ID!): Menu
  menus(
    filter: MenuFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): MenuConnection!
  merchant(id: ID!): Merchant
  merchants(
    filter: MerchantFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): MerchantConnection!
  myOrder(number: String!): Order
  noticedNotifications(
    filter: NotificationFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): NotificationConnection!
  optionType(id: ID!): OptionType
  optionTypes(
    filter: OptionTypeFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): OptionTypeConnection!
  optionValue(id: ID!): OptionValue
  optionValues(
    filter: OptionValueFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): OptionValueConnection!
  orders(
    filter: OrderFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): OrderConnection
  page(id: ID!): Page
  pages(
    filter: PageFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PageConnection!
  paymentMethod(id: ID!): PaymentMethod
  paymentMethods(
    filter: PaymentMethodFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PaymentMethodConnection!
  product(id: ID, slug: String): Product
  products(
    filter: ProductFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ProductConnection!
  user(id: ID!): User
  userAddresses(
    filter: UserAddressFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): UserAddressConnection!
  users(
    filter: UserFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): UserConnection!
  variant(id: ID!): Variant
  variants(
    filter: VariantFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): VariantConnection!
  vendor(id: ID!): Vendor
  vendorUser(id: ID!, vendorId: ID): VendorUser
  vendorUsers(
    filter: VendorUserFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): VendorUserConnection!
  vendors(
    filter: VendorFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): VendorConnection!
  website(id: ID!): Website
  websites(
    filter: WebsiteFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): WebsiteConnection!
}

"""
Autogenerated input type of removeImageVariant
"""
input removeImageVariantInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  variantId: ID!
  id: ID!
}

"""
Autogenerated input type of removeItem
"""
input removeItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of resetPassword
"""
input resetPasswordInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  login: ID!
  password: String!
  token: String!
}

type Row {
  """
  100: Гүйлгээний дүн
  """
  paymentAmount: String!

  """
  MNT: Гүйлгээний валют
  """
  paymentCurrency: String!

  """
  Гүйлгээ хийгдсэн хугацаа: 2020-10-19T08:58:46.641Z
  """
  paymentDate: String!

  """
  1: Гүйлгээний шимтгэл шимтгэл
  """
  paymentFee: String!

  """
  593744473409193: QPay-ээс үүссэн гүйлгээний дугаар
  """
  paymentId: Int!
  paymentStatus: PaymentStatusEnum!

  """
  0fc9b71c-cd87-4ffd-9cac-2279ebd9deb0: Гүйлгээ хийгдэн воллет
  """
  paymentWallet: String!
  transactionType: TransactionTypeEnum!
}

"""
Autogenerated input type of sendOtp
"""
input sendOtpInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Mobile or email
  """
  login: String!

  """
  User ID
  """
  id: ID
}

"""
Sort Direction
"""
enum SortDirection {
  """
  Ascending
  """
  asc

  """
  Descending
  """
  desc
}

input SortFilter {
  direction: SortDirection
  field: String!
}

input StringFilter {
  """
  is blank ?
  """
  blank: Boolean

  """
  contains
  """
  cont: String

  """
  ends with
  """
  end: String

  """
  equals to
  """
  eq: String

  """
  in: Matches any values in giver array
  """
  in: [String!]

  """
  not equals to
  """
  notEq: String

  """
  in: Matches none of values in giver array
  """
  notIn: [String!]

  """
  is null ?
  """
  notNull: Boolean

  """
  is null ?
  """
  null: Boolean

  """
  starts with
  """
  start: String
}

"""
Гүйлгээний төрөл
"""
enum TransactionTypeEnum {
  """
  Дансны гүйлгээ
  """
  P2P

  """
  Картын гүйлгээ
  """
  CARD
}

"""
Autogenerated input type of updateApplication
"""
input updateApplicationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  confidential: Boolean
  name: String
  redirectUri: String
  scopes: String
  secret: String
  uid: String
}

"""
Autogenerated input type of updateAssetRole
"""
input updateAssetRoleInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!

  """
  Asset id
  """
  assetId: ID

  """
  Asset type. Supp::Vendor, Supp::Website, Supp::Merchant
  """
  assetType: String

  """
  First name
  """
  vendorId: ID

  """
  Employee id. supp_vendor_users
  """
  vendorUserId: ID

  """
  roles
  """
  roles: [String!]
}

"""
Autogenerated input type of updateBrand
"""
input updateBrandInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  name: String
  code: String
  description: String
  verified: Boolean
}

"""
Autogenerated input type of updateCheckoutAddress
"""
input updateCheckoutAddressInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  shipAddressAttributes: AddressInput
  billAddressAttributes: AddressInput
  shipAddressId: ID
  billAddressId: ID
}

"""
Autogenerated input type of updateItem
"""
input updateItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  quantity: Int!
}

"""
Autogenerated input type of updateListing
"""
input updateListingInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  websiteId: ID
  productId: ID
  slug: String
  published: Boolean
  approved: Boolean
}

"""
Autogenerated input type of updateMenu
"""
input updateMenuInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  title: String
  link: String
  preferences: JSON
  type: String
  icon: String
  parentId: ID
  childrenAttributes: [MenuChildrenInput!]
}

"""
Autogenerated input type of updateMerchant
"""
input updateMerchantInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  websiteId: ID
  vendorId: ID
}

"""
Autogenerated input type of updateOptionType
"""
input updateOptionTypeInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  name: String
  presentation: String
  position: Int
}

"""
Autogenerated input type of updateOptionValue
"""
input updateOptionValueInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  optionTypeId: ID
  name: String
  presentation: String
  code: String
  position: Int
}

"""
Autogenerated input type of updatePage
"""
input updatePageInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  title: String
  preferences: JSON
  metaData: JSON
  items: [JSON!]
  slug: String
}

"""
Autogenerated input type of updatePaymentMethod
"""
input updatePaymentMethodInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  name: String

  """
  Supp::PaymentMethod::QPay::VirasoftPay
  """
  type: String
  description: String
  active: Boolean
  testMode: Boolean
  preferences: JSON
}

"""
Autogenerated input type of updateProduct
"""
input updateProductInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  name: String
  title: String
  productCat: String
  vendorId: ID
  brandId: ID
  data: JSON
  info: JSON
  slug: String
  description: String
  condition: String
  published: Boolean
  approved: Boolean
}

"""
Autogenerated input type of updateUserAddress
"""
input updateUserAddressInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  name: String
  addressAttributes: AddressInput
}

"""
Autogenerated input type of updateVariant
"""
input updateVariantInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  productId: ID
  sku: String
  price: Float
  barcode: String
  merchantSku: String
  description: String
  position: Int
  isMaster: Boolean
  weight: Float
  netWeight: Float
  width: Float
  height: Float
  depth: Float
  optionValues: [ID!]
}

"""
Autogenerated input type of updateVendor
"""
input updateVendorInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  name: String
  code: String
  registerNum: String
  phone: String
  email: String
  website: String
  address: String
}

"""
Autogenerated input type of updateVendorUser
"""
input updateVendorUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  vendorId: ID
  userId: ID
  firstName: String
  lastName: String
  email: String
  mobile: String
  role: VendorUserRole
  status: Int
}

"""
Autogenerated input type of updateWebsite
"""
input updateWebsiteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  name: String
  code: String
}

scalar Upload

type User implements BaseModelInterface {
  assetRoles: [AssetRole!]
  createdAt: ISO8601DateTime!
  email: String
  firstName: String
  gender: String
  id: ID!
  lastName: String
  mobile: String
  nickName: String
  orders(
    filter: OrderFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): OrderConnection!
  registerNum: String
  role: Int
  roleMatrix: JSON
  roles: [String!]
  updatedAt: ISO8601DateTime!
  userAddresses(
    filter: UserAddressFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): UserAddressConnection!
  vendorUsers(
    filter: VendorUserFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): VendorUserConnection!
}

type UserAddress implements BaseModelInterface {
  address: Address!
  createdAt: ISO8601DateTime!
  id: ID!
  name: String
  preferences: JSON
  updatedAt: ISO8601DateTime!
  user: User!
}

"""
The connection type for UserAddress.
"""
type UserAddressConnection {
  """
  A list of edges.
  """
  edges: [UserAddressEdge!]!

  """
  A list of nodes.
  """
  nodes: [UserAddress!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type UserAddressEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: UserAddress!
}

input UserAddressFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
  userId: IDFilter
  addressId: IDFilter
  user: UserFilter
  address: AddressFilter
}

"""
The connection type for User.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge!]!

  """
  A list of nodes.
  """
  nodes: [User!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: User!
}

input UserFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
  email: StringFilter
  firstName: StringFilter
  gender: StringFilter
  lastName: StringFilter
  mobile: StringFilter
  nickName: StringFilter
  registerNum: StringFilter
  role: IntFilter
  unconfirmedMobile: StringFilter
  unconfirmedEmail: StringFilter
}

type Variant implements BaseModelInterface {
  barcode: String
  createdAt: ISO8601DateTime!
  depth: Float
  description: String
  height: Float
  id: ID!
  imageObjects: [ImageObject!]!
  images: [String!]!
  isMaster: Boolean!
  merchantSku: String
  netWeight: Float
  optionsText: String
  position: Int
  price: Float!
  product: Product!
  salePrice: Float
  sku: String!
  updatedAt: ISO8601DateTime!
  variantOptionValues: [ID!]
  weight: Float
  width: Float
}

"""
The connection type for Variant.
"""
type VariantConnection {
  """
  A list of edges.
  """
  edges: [VariantEdge!]!

  """
  A list of nodes.
  """
  nodes: [Variant!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type VariantEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Variant!
}

input VariantFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
}

type Vendor implements BaseModelInterface {
  address: String
  code: String
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  name: String
  phone: String
  productsCount: Int
  registerNum: String
  updatedAt: ISO8601DateTime!
  website: String
}

"""
The connection type for Vendor.
"""
type VendorConnection {
  """
  A list of edges.
  """
  edges: [VendorEdge!]!

  """
  A list of nodes.
  """
  nodes: [Vendor!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type VendorEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Vendor!
}

input VendorFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
  name: StringFilter
}

type VendorUser implements BaseModelInterface {
  addedBy: User!
  assetRoles(
    filter: AssetRoleFilter
    sort: SortFilter

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AssetRoleConnection!
  createdAt: ISO8601DateTime!
  email: String
  firstName: String
  id: ID!
  lastName: String
  mobile: String
  role: String!
  status: String!
  updatedAt: ISO8601DateTime!
  user: User!
  vendor: Vendor!
}

"""
The connection type for VendorUser.
"""
type VendorUserConnection {
  """
  A list of edges.
  """
  edges: [VendorUserEdge!]!

  """
  A list of nodes.
  """
  nodes: [VendorUser!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type VendorUserEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: VendorUser!
}

input VendorUserFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
  firstName: StringFilter
  vendorId: IDFilter
}

"""
Role
"""
enum VendorUserRole {
  """
  A regular member user
  """
  member

  """
  An admin user
  """
  admin
}

type Website implements BaseModelInterface {
  createdAt: ISO8601DateTime!
  domain: String!
  id: ID!
  index: String!
  merchants: [Merchant!]!
  name: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Website.
"""
type WebsiteConnection {
  """
  A list of edges.
  """
  edges: [WebsiteEdge!]!

  """
  A list of nodes.
  """
  nodes: [Website!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type WebsiteEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Website!
}

input WebsiteFilter {
  id: IDFilter
  createdAt: DateFilter
  updatedAt: DateFilter
  name: StringFilter
  domain: StringFilter
  index: StringFilter
}
